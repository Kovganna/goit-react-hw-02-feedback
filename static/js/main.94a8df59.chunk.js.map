{"version":3,"sources":["components/Section.js","components/Notification.js","components/Statistics.js","components/FeedbackOptions.js","App.js","index.js","components/Feedback.module.css"],"names":["Section","title","children","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","grades","onFeedbackValue","className","map","grade","type","value","onClick","s","feedbackBtn","App","state","e","target","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"oSAgBeA,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,gCACE,6BAAKD,IACJC,MCGQC,EAPM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAIA,KCyBEC,EAxBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,8BACGD,EACC,+BACE,uCAAUH,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,UAGF,cAAC,EAAD,CAAcN,QAAQ,yB,gBCUbO,EArBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,gBAAX,OACtB,qBAAKC,UAAU,MAAf,SACGF,EAAOG,KAAI,SAACC,GAAD,OACV,wBAEEC,KAAK,SACLC,MAAOF,EACPG,QAASN,EACTC,UAAWM,IAAEC,YALf,SAOGL,GANIA,SCFPM,E,4MACJC,MAAQ,CACNjB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPK,gBAAkB,SAACW,GACjB,IAAMb,EAAkBa,EAAEC,OAAOP,MACjC,EAAKQ,UAAS,SAACC,GAAD,mBAAC,eACVA,GADS,kBAEXhB,EAAkBgB,EAAUhB,GAAmB,Q,EAIpDiB,mBAAqB,WACnB,MAA+B,EAAKL,MACpC,OADA,EAAQjB,KAAR,EAAcC,QAAd,EAAuBC,K,EAIzBqB,gCAAkC,WAChC,IAAID,EAAqB,EAAKA,qBAE9B,OAAOA,EACHE,KAAKC,MAAyB,IAAlB,EAAKR,MAAMjB,KAAcsB,GACrC,G,4CAGN,WACE,IACQf,EAAoBmB,KAApBnB,gBACFe,EAAqBI,KAAKJ,qBAChC,EAA+BI,KAAKT,MAA5BjB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBqB,EACJG,KAAKH,kCACP,OACE,gCACE,cAAC,EAAD,CAAS5B,MAAO,wBAAhB,SACE,cAAC,EAAD,CAAiBW,OATR,CAAC,OAAQ,UAAW,OASIC,gBAAiBA,MAEpD,cAAC,EAAD,CAASZ,MAAO,aAAhB,SACE,cAAC,EAAD,CACEK,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOmB,EACPlB,mBAAoBmB,a,GA9CdI,aAsDHX,ICvDfY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,YAAc,iC","file":"static/js/main.94a8df59.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <div>\r\n      <h1>{title}</h1>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Section;\r\n","import PropTypes from \"prop-types\";\r\n\r\nconst Notification = ({ message }) => {\r\n  return <p>{message}</p>;\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\nexport default Notification;\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Notification from \"./Notification\";\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <div>\n    {total ? (\n      <ul>\n        <li>Good:{good}</li>\n        <li>Neutral:{neutral}</li>\n        <li>Bad:{bad}</li>\n        <li>Total:{total}</li>\n        <li>Positive feedback:{positivePercentage}%</li>\n      </ul>\n    ) : (\n      <Notification message=\"No feedback given\" />\n    )}\n  </div>\n);\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number,\n  positivePercentage: PropTypes.number,\n};\n\nexport default Statistics;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Feedback.module.css\";\n\nconst FeedbackOptions = ({ grades, onFeedbackValue }) => (\n  <div className=\"btn\">\n    {grades.map((grade) => (\n      <button\n        key={grade}\n        type=\"button\"\n        value={grade}\n        onClick={onFeedbackValue}\n        className={s.feedbackBtn}\n      >\n        {grade}\n      </button>\n    ))}\n  </div>\n);\n\nFeedbackOptions.propTypes = {\n  grades: PropTypes.array,\n  onFeedbackValue: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import { Component } from \"react\";\nimport \"./App.css\";\nimport Section from \"./components/Section\";\nimport Statistics from \"./components/Statistics\";\nimport FeedbackOptions from \"./components/FeedbackOptions\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onFeedbackValue = (e) => {\n    const FeedbackOptions = e.target.value;\n    this.setState((prevState) => ({\n      ...prevState,\n      [FeedbackOptions]: prevState[FeedbackOptions] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    let countTotalFeedback = this.countTotalFeedback();\n\n    return countTotalFeedback\n      ? Math.round((this.state.good * 100) / countTotalFeedback)\n      : 0;\n  };\n\n  render() {\n    const grades = [\"good\", \"neutral\", \"bad\"];\n    const { onFeedbackValue } = this;\n    const countTotalFeedback = this.countTotalFeedback();\n    const { good, neutral, bad } = this.state;\n    const countPositiveFeedbackPercentage =\n      this.countPositiveFeedbackPercentage();\n    return (\n      <div>\n        <Section title={\"Please leave feedback\"}>\n          <FeedbackOptions grades={grades} onFeedbackValue={onFeedbackValue} />\n        </Section>\n        <Section title={\"Statistics\"}>\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback}\n            positivePercentage={countPositiveFeedbackPercentage}\n          />\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackBtn\":\"Feedback_feedbackBtn__hzYN8\"};"],"sourceRoot":""}