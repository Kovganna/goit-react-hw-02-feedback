{"version":3,"sources":["components/FeedbackBtn.js","components/Statistics.js","components/Feedback.js","App.js","index.js","components/Feedback.module.css"],"names":["FeedbackBtn","grades","onFeedbackValue","className","map","grade","type","value","onClick","s","feedbackBtn","Statistics","good","neutral","bad","total","positive","Feedback","state","e","target","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Component","App","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"kTAyBeA,EArBK,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,gBAAX,OAClB,qBAAKC,UAAU,MAAf,SACGF,EAAOG,KAAI,SAACC,GAAD,OACV,wBAEEC,KAAK,SACLC,MAAOF,EACPG,QAASN,EACTC,UAAWM,IAAEC,YALf,SAOGL,GANIA,SCeEM,EApBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,SAA9B,OACjB,8BACE,+BACE,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,aCNAC,E,4MACJC,MAAQ,CACNN,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPZ,gBAAkB,SAACiB,GACjB,IAAMnB,EAAcmB,EAAEC,OAAOb,MAC7B,EAAKc,UAAS,SAACC,GAAD,mBAAC,eACVA,GADS,kBAEXtB,EAAcsB,EAAUtB,GAAe,Q,EAI5CuB,mBAAqB,WACnB,MAA+B,EAAKL,MACpC,OADA,EAAQN,KAAR,EAAcC,QAAd,EAAuBC,K,EAIzBU,gCAAkC,WAChC,IAAID,EAAqB,EAAKA,qBAE9B,OAAOA,EACHE,KAAKC,MAAyB,IAAlB,EAAKR,MAAMN,KAAcW,GACrC,G,4CAGN,WACE,IACQrB,EAAoByB,KAApBzB,gBACFqB,EAAqBI,KAAKJ,qBAChC,EAA+BI,KAAKT,MAA5BN,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBU,EACJG,KAAKH,kCACP,OACE,sBAAKrB,UAAU,WAAf,UACE,uDACA,cAAC,EAAD,CAAaF,OATF,CAAC,OAAQ,UAAW,OASFC,gBAAiBA,IAC9C,4CACA,cAAC,EAAD,CACEU,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOQ,EACPP,SAAUQ,W,GA7CGI,aAoDRX,IC7CAY,MARf,WACE,OACE,qBAAK1B,UAAU,MAAf,SACE,cAAC,EAAD,OCDN2B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,YAAc,iC","file":"static/js/main.907ee2ca.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Feedback.module.css\";\n\nconst FeedbackBtn = ({ grades, onFeedbackValue }) => (\n  <div className=\"btn\">\n    {grades.map((grade) => (\n      <button\n        key={grade}\n        type=\"button\"\n        value={grade}\n        onClick={onFeedbackValue}\n        className={s.feedbackBtn}\n      >\n        {grade}\n      </button>\n    ))}\n  </div>\n);\n\nFeedbackBtn.propTypes = {\n  grades: PropTypes.array,\n  onFeedbackValue: PropTypes.func.isRequired,\n};\n\nexport default FeedbackBtn;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Statistics = ({ good, neutral, bad, total, positive }) => (\n  <div>\n    <ul>\n      <li>Good:{good}</li>\n      <li>Neutral:{neutral}</li>\n      <li>Bad:{bad}</li>\n      <li>Total:{total}</li>\n      <li>Positive feedback:{positive}%</li>\n    </ul>\n  </div>\n);\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  valueNeutral: PropTypes.number.isRequired,\n  valueBad: PropTypes.number.isRequired,\n  total: PropTypes.func,\n  positiveFeedback: PropTypes.func,\n};\n\nexport default Statistics;\n","import { Component } from \"react\";\nimport FeedbackBtn from \"./FeedbackBtn\";\nimport Statistics from \"./Statistics\";\n\nclass Feedback extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onFeedbackValue = (e) => {\n    const FeedbackBtn = e.target.value;\n    this.setState((prevState) => ({\n      ...prevState,\n      [FeedbackBtn]: prevState[FeedbackBtn] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    let countTotalFeedback = this.countTotalFeedback();\n\n    return countTotalFeedback\n      ? Math.round((this.state.good * 100) / countTotalFeedback)\n      : 0;\n  };\n\n  render() {\n    const grades = [\"good\", \"neutral\", \"bad\"];\n    const { onFeedbackValue } = this;\n    const countTotalFeedback = this.countTotalFeedback();\n    const { good, neutral, bad } = this.state;\n    const countPositiveFeedbackPercentage =\n      this.countPositiveFeedbackPercentage();\n    return (\n      <div className=\"feedback\">\n        <h1>Please leave feedback</h1>\n        <FeedbackBtn grades={grades} onFeedbackValue={onFeedbackValue} />\n        <h2>Statistics</h2>\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={countTotalFeedback}\n          positive={countPositiveFeedbackPercentage}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Feedback;\n","import \"./App.css\";\nimport Feedback from \"./components/Feedback\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Feedback />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackBtn\":\"Feedback_feedbackBtn__hzYN8\"};"],"sourceRoot":""}